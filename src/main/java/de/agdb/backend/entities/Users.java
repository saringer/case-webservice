package de.agdb.backend.entities;


import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.util.HashSet;
import java.util.Set;


@Entity
@Table(name = "users")
public class Users {


    // An autogenerated id (unique for each user in the db)
    @Id
    @Column(name = "USER_ID")
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    @NotNull
    @Column(name = "USERNAME")
    private String name;

    @NotNull
    @Column( name = "PASSWORD")
    private String password;

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, targetEntity = Contact.class)
    @JoinTable(name = "USER_CONTACT", joinColumns = { @JoinColumn(name = "USER_ID") }, inverseJoinColumns = { @JoinColumn(name = "CONTACT_ID") })
    private Set<Contact> contacts;
    // Public methods
    public Users() {
    }



    // getters/setters

    public long getID() {
        return id;
    }

    public void setID(long newID) {
        id = newID;
    }

    public String getName() {
        return name;
    }

    public void setName(String userName) {
        name = userName;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String userPassword) {
        password = userPassword;
    }


    public Set<Contact> getContacts() {
        return contacts;
    }

    public void setContacts(Set<Contact> contacts) {
        this.contacts = contacts;
    }

    public void addContact(Contact contact) {
        this.contacts.add(contact);
    }


}
