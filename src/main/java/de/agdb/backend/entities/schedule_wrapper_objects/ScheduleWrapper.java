package de.agdb.backend.entities.schedule_wrapper_objects;

import de.agdb.backend.entities.Contact;

import javax.persistence.*;
import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.List;

@Entity
@Table(name = "schedule")
public class ScheduleWrapper {



    // An autogenerated id (unique for each schedule in the db)
    @Id
    @Column(name = "SCHEDULE_ID")
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, targetEntity = DayWrapper.class)
    @JoinTable(name = "SCHEDULE_DAY", joinColumns = { @JoinColumn(name = "SCHEDULE_ID") }, inverseJoinColumns = { @JoinColumn(name = "DAY_ID") })
    private List<DayWrapper> days;
    private String title;
    private String description;

    public void setDays(List<DayWrapper> days) {
        this.days = days;
    }

    public List<DayWrapper> getDays() {
        return this.days;
    }


    public void setTitle(String title) {
        this.title = title;
    }
    public String getTitle() {
        return this.title;
    }


    public ScheduleWrapper() {
            days = new ArrayList<>();
    }

    public void addDay(DayWrapper e) {
        days.add(e);
        System.out.println("Day added" +  e.getDay());
    }

    public void removeAlldays() {
        days.clear();
    }

    public void removeDay(ZonedDateTime day) {
        for (int i=0; i<days.size();i++) {
            if ((days.get(i).getDay().compareTo(day)) == 0) {
                        days.remove(i);
                System.out.println("Day removed" + day);

                break;
            }
        }
    }

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public void clear() {

    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

}
