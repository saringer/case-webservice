package de.agdb.backend.entities.schedule_wrapper_objects;

import de.agdb.backend.entities.Contact;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import javax.persistence.*;
import java.util.List;

@Entity
@Table(name = "categorysetup")
public class CategoriesWrapper {


    // An autogenerated id (unique for each schedule in the db)
    @Id
    @Column(name = "CATEGORYSETUP_ID")
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;
    private int numberParticipants;
    private String categoryTitle;


    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, targetEntity = Contact.class)
    @JoinTable(name = "CATEGORYSETUP_CONTACTS", joinColumns = { @JoinColumn(name = "CATEGORYSETUP_ID") }, inverseJoinColumns = { @JoinColumn(name = "CONTACT_ID") })
    @Fetch(value = FetchMode.SUBSELECT)
    private List<Contact> assignedContactsList;

    public CategoriesWrapper() {
    }

    public List<Contact> getAssignedContactsList() {
        return assignedContactsList;
    }

    public void setAssignedContactsList(List<Contact> assignedContactsList) {
        this.assignedContactsList = assignedContactsList;
    }

    public void addAssignedContact(Contact contact) {
        boolean flag = true;
        for (int i=0;i<assignedContactsList.size();i++) {
            if (assignedContactsList.get(i).getEmail().equals(contact.getEmail())) {
                flag = false;
                break;
            }
        }
        if (flag) {
            this.assignedContactsList.add(contact);

        }
    }

    public CategoriesWrapper(int numberParticipants, String category) {
        this.numberParticipants = numberParticipants;
        this.categoryTitle = category;
    }

    public int getNumberParticipants() {
        return numberParticipants;
    }
    public void setNumberParticipants(int numberParticipants) {
        this.numberParticipants = numberParticipants;
    }

    public String getCategoryTitle() {
        return this.categoryTitle;
    }
    public void setCategoryTitle(String categoryTitle) {
        this.categoryTitle = categoryTitle;
    }

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

}
